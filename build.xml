<?xml version="1.0"?>
	
<project name="companyNews" default="archive" basedir=".">
	
    <description>
           companyNews example
    </description>
	
	<property file="build.properties"/>
    
	<target name="clean" description="Delete old report, build and dist directories">
		<delete dir="${dist.home}"/>
		<delete dir="${build.home}"/>
		<delete dir="${report}"/>
	</target>

	<!-- ==================== Init Target ================================== -->

	<!--

	  The "init" target is used to create the "build" destination directory,
	  Normally, this task is executed indirectly when needed.

	-->
	<target name="init" depends="clean"  description="Create build directory">
		
		<mkdir dir="${build.home}" />

	</target>
	
	<!-- ==================== Compile Target ================================== -->

	<!--

	  The "compile" target transforms source files (from your "src" directory)
	  into class files in the appropriate location in the build directory.
	  This example assumes that you will be including your classes in an
	  unpacked directory hierarchy under "/WEB-INF/classes".

	-->
	<target name="compile" depends="init" description="Compile Java sources">
		
		
		<mkdir dir="${build.home}/WEB-INF/classes" />
		
		<javac srcdir="${source.home}"
				destdir="${build.home}/WEB-INF/classes"
				debug="${compile.debug}"
				deprecation="${compile.deprecation}"
				optimize="${compile.optimize}"
			     source="1.6" target="1.6">
			
			<classpath>
				<path>
			    	<fileset dir="${lib.home}" />
					<fileset dir="${lib.external}" />
			    </path>
			</classpath>
			
		</javac>

	</target>
	
	<!-- ==================== Build Target ================================== -->

	<!--

	  The "build" target copies all non class files to build directory

	-->
	
	<target name="build" depends="compile" description="Copies all non Java classes to build directoy">
		<copy todir="${build.home}">
			<fileset dir="${webapp.home}" excludes="CVS,**/*.class" />
		</copy>
		<copy todir="${build.home}/WEB-INF/classes">
			<fileset dir="${source.home}" excludes="CVS,**/*.java" />
		</copy>
	</target>
	
	<!-- ==================== Archive Target ================================== -->

	<!--

	  The "archive" target create a binary archive of all files in build.home

	-->

	<target name="war" depends="build" description="Create binary archive of all files in dist.home">
		
		<mkdir     dir="${dist.home}" />
		
		<!-- Create application WAR file -->
	    <jar jarfile="${dist.home}/${app.name}.war"
			basedir="${build.home}" />

	</target>	


	<target name="run-tests" depends="compile" description="run your test suite" >
		<mkdir     dir="${reports}" />
		<mkdir     dir="${reports}/raw/" />
		<junit printsummary="yes" haltonfailure="yes" showoutput="yes">
 		  <batchtest fork="yes" todir="${reports}/raw/">
		  	<formatter type="xml"/>
		    <fileset dir="${test.home}"/>
		    <fileset dir="${lib.external}"/>
		    <fileset dir="${build.home}/WEB-INF/classes"/>
		  </batchtest>
		</junit>
	</target>

	<target name ="test" depends="run-tests">

		<junitreport todir="${reports}">
		  <fileset dir="${reports}/raw/">
		    <include name="TEST-*.xml"/>
		  </fileset>
		  <report format="frames" todir="${reports}\html\"/>
		</junitreport>
	</target>
	
	
  
	
</project>

